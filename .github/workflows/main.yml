name: CI
on: [push,pull_request,workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Release
        run: |
          export VERSION=$(cat VERSION)
          [[ -z "$VERSION" ]] && { echo "ERROR: File VERSION not found or empty"; exit 1; }
          echo $VERSION
          export RELEASEID=$(echo $(curl -X GET \
          -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
          ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/tags/${VERSION}) | jq -r '.id')
          echo $RELEASEID
          if [[ "$RELEASEID" == "null" ]]; then
            curl -X POST \
            -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
            ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/git/tags \
            -d '{"tag":"$VERSION","message":"$VERSION","object":"$GITHUB_SHA","type":"commit"}'
            curl -X POST \
            -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
            ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases \
            -d '{"tag_name":"${VERSION}","target_commitish":"${GITHUB_SHA}"}'
          else
            curl -X PATCH \
            -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
            ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/tags/${RELEASEID} \
            -d '{"target_commitish":"${GITHUB_SHA}"}'
          fi
